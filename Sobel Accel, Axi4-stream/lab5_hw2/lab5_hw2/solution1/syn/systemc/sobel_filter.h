// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sobel_filter_HH_
#define _sobel_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sobel_filter_mux_dEe.h"
#include "sobel_filter_mac_eOg.h"
#include "sobel_filter_Gx.h"
#include "sobel_filter_Gy.h"
#include "sobel_filter_pixebkb.h"
#include "sobel_filter_ctrl_bus_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct sobel_filter : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > INPUT_IMAGE_TDATA;
    sc_in< sc_logic > INPUT_IMAGE_TVALID;
    sc_out< sc_logic > INPUT_IMAGE_TREADY;
    sc_in< sc_lv<1> > INPUT_IMAGE_TKEEP;
    sc_in< sc_lv<1> > INPUT_IMAGE_TSTRB;
    sc_in< sc_lv<2> > INPUT_IMAGE_TUSER;
    sc_in< sc_lv<1> > INPUT_IMAGE_TLAST;
    sc_in< sc_lv<5> > INPUT_IMAGE_TID;
    sc_in< sc_lv<6> > INPUT_IMAGE_TDEST;
    sc_out< sc_lv<8> > OUTPUT_IMAGE_TDATA;
    sc_out< sc_logic > OUTPUT_IMAGE_TVALID;
    sc_in< sc_logic > OUTPUT_IMAGE_TREADY;
    sc_out< sc_lv<1> > OUTPUT_IMAGE_TKEEP;
    sc_out< sc_lv<1> > OUTPUT_IMAGE_TSTRB;
    sc_out< sc_lv<2> > OUTPUT_IMAGE_TUSER;
    sc_out< sc_lv<1> > OUTPUT_IMAGE_TLAST;
    sc_out< sc_lv<5> > OUTPUT_IMAGE_TID;
    sc_out< sc_lv<6> > OUTPUT_IMAGE_TDEST;
    sc_in< sc_logic > s_axi_ctrl_bus_AWVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_AWADDR;
    sc_in< sc_logic > s_axi_ctrl_bus_WVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_ctrl_bus_WSTRB;
    sc_in< sc_logic > s_axi_ctrl_bus_ARVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_ARADDR;
    sc_out< sc_logic > s_axi_ctrl_bus_RVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_RDATA;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_RRESP;
    sc_out< sc_logic > s_axi_ctrl_bus_BVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_BREADY;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    sobel_filter(sc_module_name name);
    SC_HAS_PROCESS(sobel_filter);

    ~sobel_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sobel_filter_Gx* Gx_U;
    sobel_filter_Gy* Gy_U;
    sobel_filter_ctrl_bus_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* sobel_filter_ctrl_bus_s_axi_U;
    sobel_filter_pixebkb* pixelbuffer_val_1_U;
    sobel_filter_pixebkb* pixelbuffer_val_2_U;
    sobel_filter_mux_dEe<1,1,8,8,8,8,8,8,8,8,8,4,8>* sobel_filter_mux_dEe_U1;
    sobel_filter_mac_eOg<1,1,3,8,32,32>* sobel_filter_mac_eOg_U2;
    sobel_filter_mac_eOg<1,1,3,8,32,32>* sobel_filter_mac_eOg_U3;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > INPUT_IMAGE_V_data_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > INPUT_IMAGE_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > INPUT_IMAGE_V_data_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_data_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_keep_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_ack_out;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_keep_V_0_payload_A;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_keep_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_keep_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_strb_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_ack_out;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_strb_V_0_payload_A;
    sc_signal< sc_lv<1> > INPUT_IMAGE_V_strb_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_strb_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_user_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_user_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_user_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > INPUT_IMAGE_V_id_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > INPUT_IMAGE_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > INPUT_IMAGE_V_id_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_id_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > INPUT_IMAGE_V_dest_V_0_data_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_vld_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_vld_out;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_ack_in;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > INPUT_IMAGE_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > INPUT_IMAGE_V_dest_V_0_payload_B;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_sel;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_load_A;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_IMAGE_V_dest_V_0_state;
    sc_signal< sc_logic > INPUT_IMAGE_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<8> > OUTPUT_IMAGE_V_data_V_1_data_in;
    sc_signal< sc_lv<8> > OUTPUT_IMAGE_V_data_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > OUTPUT_IMAGE_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > OUTPUT_IMAGE_V_data_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_data_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_keep_V_1_data_in;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_keep_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_ack_out;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_keep_V_1_payload_A;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_keep_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_keep_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_strb_V_1_data_in;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_strb_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_ack_out;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_strb_V_1_payload_A;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_strb_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_strb_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_user_V_1_data_in;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_user_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_user_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_user_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_last_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > OUTPUT_IMAGE_V_last_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_last_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > OUTPUT_IMAGE_V_id_V_1_data_in;
    sc_signal< sc_lv<5> > OUTPUT_IMAGE_V_id_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > OUTPUT_IMAGE_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > OUTPUT_IMAGE_V_id_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_id_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > OUTPUT_IMAGE_V_dest_V_1_data_in;
    sc_signal< sc_lv<6> > OUTPUT_IMAGE_V_dest_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > OUTPUT_IMAGE_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > OUTPUT_IMAGE_V_dest_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_sel;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_IMAGE_V_dest_V_1_state;
    sc_signal< sc_logic > OUTPUT_IMAGE_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > Gx_address0;
    sc_signal< sc_logic > Gx_ce0;
    sc_signal< sc_lv<3> > Gx_q0;
    sc_signal< sc_lv<4> > Gy_address0;
    sc_signal< sc_logic > Gy_ce0;
    sc_signal< sc_lv<3> > Gy_q0;
    sc_signal< sc_logic > INPUT_IMAGE_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > OUTPUT_IMAGE_TDATA_blk_n;
    sc_signal< sc_lv<1> > and_ln52_fu_1026_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln66_fu_1038_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > and_ln52_reg_1653;
    sc_signal< sc_lv<1> > icmp_ln61_reg_1657;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > icmp_ln101_fu_1335_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > i_2_fu_477_p2;
    sc_signal< sc_lv<4> > i_2_reg_1477;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<21> > counter_fu_483_p2;
    sc_signal< sc_lv<21> > counter_reg_1482;
    sc_signal< sc_lv<1> > icmp_ln29_fu_471_p2;
    sc_signal< sc_lv<1> > icmp_ln41_fu_489_p2;
    sc_signal< sc_lv<1> > icmp_ln41_reg_1487;
    sc_signal< sc_lv<8> > k_fu_501_p2;
    sc_signal< sc_lv<8> > k_reg_1495;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<21> > add_ln34_fu_507_p2;
    sc_signal< sc_lv<21> > add_ln34_reg_1500;
    sc_signal< sc_lv<1> > icmp_ln30_fu_495_p2;
    sc_signal< sc_lv<1> > icmp_ln41_1_fu_513_p2;
    sc_signal< sc_lv<1> > icmp_ln41_1_reg_1505;
    sc_signal< sc_lv<1> > icmp_ln274_2_fu_523_p2;
    sc_signal< sc_lv<1> > icmp_ln274_2_reg_1510;
    sc_signal< sc_lv<1> > icmp_ln274_3_fu_529_p2;
    sc_signal< sc_lv<1> > icmp_ln274_3_reg_1520;
    sc_signal< sc_lv<11> > j_fu_541_p2;
    sc_signal< sc_lv<11> > j_reg_1536;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > pixelbuffer_val_1_a_reg_1541;
    sc_signal< sc_lv<1> > icmp_ln31_fu_535_p2;
    sc_signal< sc_lv<10> > pixelbuffer_val_2_a_reg_1546;
    sc_signal< sc_lv<1> > and_ln41_1_fu_564_p2;
    sc_signal< sc_lv<1> > and_ln41_1_reg_1551;
    sc_signal< sc_lv<21> > add_ln34_1_fu_596_p2;
    sc_signal< sc_lv<21> > add_ln34_1_reg_1564;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< sc_lv<1> > tmp_keep_V_3_reg_1569;
    sc_signal< sc_lv<1> > tmp_strb_V_3_reg_1575;
    sc_signal< sc_lv<2> > tmp_user_V_3_reg_1581;
    sc_signal< sc_lv<5> > tmp_id_V_3_reg_1587;
    sc_signal< sc_lv<6> > tmp_dest_V_3_reg_1593;
    sc_signal< sc_lv<8> > window_val_2_1_7_fu_951_p3;
    sc_signal< sc_lv<8> > window_val_2_1_7_reg_1599;
    sc_signal< sc_lv<8> > select_ln41_fu_958_p3;
    sc_signal< sc_lv<8> > select_ln41_reg_1605;
    sc_signal< sc_lv<8> > window_val_2_2_51_fu_965_p3;
    sc_signal< sc_lv<8> > window_val_2_2_51_reg_1611;
    sc_signal< sc_lv<8> > select_ln41_2_fu_972_p3;
    sc_signal< sc_lv<8> > select_ln41_2_reg_1617;
    sc_signal< sc_lv<8> > select_ln41_3_fu_979_p3;
    sc_signal< sc_lv<8> > select_ln41_3_reg_1623;
    sc_signal< sc_lv<8> > window_val_2_2_52_fu_986_p3;
    sc_signal< sc_lv<8> > window_val_2_2_52_reg_1629;
    sc_signal< sc_lv<8> > select_ln41_5_fu_993_p3;
    sc_signal< sc_lv<8> > select_ln41_5_reg_1635;
    sc_signal< sc_lv<8> > select_ln41_6_fu_1000_p3;
    sc_signal< sc_lv<8> > select_ln41_6_reg_1641;
    sc_signal< sc_lv<8> > window_val_2_2_53_fu_1007_p3;
    sc_signal< sc_lv<8> > window_val_2_2_53_reg_1647;
    sc_signal< sc_lv<1> > icmp_ln61_fu_1032_p2;
    sc_signal< sc_lv<3> > colOffset_fu_1048_p2;
    sc_signal< sc_lv<3> > colOffset_reg_1664;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< sc_lv<5> > zext_ln68_2_fu_1054_p1;
    sc_signal< sc_lv<5> > zext_ln68_2_reg_1669;
    sc_signal< sc_lv<4> > zext_ln68_1_fu_1064_p1;
    sc_signal< sc_lv<4> > zext_ln68_1_reg_1674;
    sc_signal< sc_lv<8> > tmp_data_V_fu_1170_p3;
    sc_signal< sc_lv<3> > rowOffset_fu_1189_p2;
    sc_signal< sc_lv<3> > rowOffset_reg_1687;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln67_fu_1179_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_1253_p11;
    sc_signal< sc_lv<8> > tmp_1_reg_1702;
    sc_signal< sc_lv<32> > grp_fu_1374_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_1382_p3;
    sc_signal< sc_lv<11> > i_fu_1341_p2;
    sc_signal< sc_lv<11> > i_reg_1720;
    sc_signal< bool > ap_block_state11;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< sc_lv<1> > tmp_last_V_fu_1367_p2;
    sc_signal< sc_lv<10> > pixelbuffer_val_1_address0;
    sc_signal< sc_logic > pixelbuffer_val_1_ce0;
    sc_signal< sc_logic > pixelbuffer_val_1_we0;
    sc_signal< sc_lv<8> > pixelbuffer_val_1_q0;
    sc_signal< sc_lv<10> > pixelbuffer_val_2_address0;
    sc_signal< sc_logic > pixelbuffer_val_2_ce0;
    sc_signal< sc_logic > pixelbuffer_val_2_we0;
    sc_signal< sc_lv<8> > pixelbuffer_val_2_q0;
    sc_signal< sc_lv<4> > i_0_reg_322;
    sc_signal< sc_lv<21> > counter_0_reg_333;
    sc_signal< sc_lv<21> > counter_1_reg_345;
    sc_signal< sc_lv<8> > row_assign_reg_356;
    sc_signal< sc_lv<11> > col_assign_reg_367;
    sc_signal< bool > ap_predicate_op236_write_state9;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< sc_lv<21> > counter_2_reg_379;
    sc_signal< sc_lv<3> > colOffset_0_reg_390;
    sc_signal< sc_lv<32> > x_dir_0_reg_401;
    sc_signal< sc_lv<32> > y_dir_0_reg_413;
    sc_signal< sc_lv<3> > rowOffset_0_reg_425;
    sc_signal< sc_lv<32> > x_dir_1_reg_436;
    sc_signal< sc_lv<32> > y_dir_1_reg_448;
    sc_signal< sc_lv<11> > i_1_reg_460;
    sc_signal< sc_lv<64> > zext_ln729_fu_547_p1;
    sc_signal< sc_lv<64> > sext_ln69_fu_1218_p1;
    sc_signal< sc_lv<6> > tmp_dest_V_fu_162;
    sc_signal< sc_lv<1> > tmp_keep_V_fu_166;
    sc_signal< sc_lv<1> > tmp_strb_V_fu_170;
    sc_signal< sc_lv<2> > tmp_user_V_fu_174;
    sc_signal< sc_lv<5> > tmp_id_V_fu_178;
    sc_signal< sc_lv<8> > window_val_2_2_1_fu_182;
    sc_signal< sc_lv<8> > window_val_2_2_2_fu_186;
    sc_signal< sc_lv<8> > window_val_0_1_fu_190;
    sc_signal< sc_lv<8> > window_val_2_2_3_fu_194;
    sc_signal< sc_lv<8> > window_val_1_0_fu_198;
    sc_signal< sc_lv<8> > window_val_1_1_fu_202;
    sc_signal< sc_lv<8> > window_val_2_2_4_fu_206;
    sc_signal< sc_lv<8> > window_val_2_0_fu_210;
    sc_signal< sc_lv<8> > window_val_2_1_fu_214;
    sc_signal< sc_lv<2> > trunc_ln274_fu_519_p1;
    sc_signal< sc_lv<1> > icmp_ln41_2_fu_553_p2;
    sc_signal< sc_lv<1> > and_ln41_fu_559_p2;
    sc_signal< sc_lv<1> > icmp_ln43_fu_636_p2;
    sc_signal< sc_lv<2> > trunc_ln274_1_fu_632_p1;
    sc_signal< sc_lv<1> > icmp_ln274_fu_714_p2;
    sc_signal< sc_lv<1> > icmp_ln274_1_fu_728_p2;
    sc_signal< sc_lv<8> > window_val_2_1_3_fu_720_p3;
    sc_signal< sc_lv<8> > window_val_2_2_fu_742_p3;
    sc_signal< sc_lv<8> > window_val_0_1_2_fu_766_p3;
    sc_signal< sc_lv<8> > window_val_2_2_35_fu_782_p3;
    sc_signal< sc_lv<8> > window_val_1_1_2_fu_806_p3;
    sc_signal< sc_lv<8> > window_val_2_2_38_fu_822_p3;
    sc_signal< sc_lv<8> > window_val_2_1_4_fu_734_p3;
    sc_signal< sc_lv<8> > window_val_2_1_5_fu_846_p3;
    sc_signal< sc_lv<8> > window_val_2_2_33_fu_750_p3;
    sc_signal< sc_lv<8> > window_val_2_2_41_fu_860_p3;
    sc_signal< sc_lv<8> > window_val_2_2_34_fu_758_p3;
    sc_signal< sc_lv<8> > window_val_2_2_43_fu_874_p3;
    sc_signal< sc_lv<8> > window_val_1_1_3_fu_814_p3;
    sc_signal< sc_lv<8> > window_val_1_1_4_fu_888_p3;
    sc_signal< sc_lv<8> > window_val_2_2_39_fu_830_p3;
    sc_signal< sc_lv<8> > window_val_2_2_45_fu_902_p3;
    sc_signal< sc_lv<8> > window_val_2_2_40_fu_838_p3;
    sc_signal< sc_lv<8> > window_val_2_2_47_fu_916_p3;
    sc_signal< sc_lv<8> > window_val_0_1_3_fu_774_p3;
    sc_signal< sc_lv<8> > window_val_2_2_36_fu_790_p3;
    sc_signal< sc_lv<8> > window_val_2_2_37_fu_798_p3;
    sc_signal< sc_lv<8> > window_val_2_1_6_fu_853_p3;
    sc_signal< sc_lv<8> > window_val_2_1_1_fu_642_p3;
    sc_signal< sc_lv<8> > window_val_2_2_42_fu_867_p3;
    sc_signal< sc_lv<8> > window_val_2_0_1_fu_650_p3;
    sc_signal< sc_lv<8> > window_val_2_2_44_fu_881_p3;
    sc_signal< sc_lv<8> > window_val_2_2_13_fu_658_p3;
    sc_signal< sc_lv<8> > window_val_1_1_5_fu_895_p3;
    sc_signal< sc_lv<8> > window_val_1_2_1_fu_666_p3;
    sc_signal< sc_lv<8> > window_val_2_2_46_fu_909_p3;
    sc_signal< sc_lv<8> > window_val_1_0_1_fu_674_p3;
    sc_signal< sc_lv<8> > window_val_2_2_48_fu_923_p3;
    sc_signal< sc_lv<8> > window_val_2_2_17_fu_682_p3;
    sc_signal< sc_lv<8> > window_val_0_1_4_fu_930_p3;
    sc_signal< sc_lv<8> > window_val_0_2_1_fu_690_p3;
    sc_signal< sc_lv<8> > window_val_2_2_49_fu_937_p3;
    sc_signal< sc_lv<8> > window_val_0_0_fu_698_p3;
    sc_signal< sc_lv<8> > window_val_2_2_50_fu_944_p3;
    sc_signal< sc_lv<8> > window_val_2_2_27_fu_706_p3;
    sc_signal< sc_lv<1> > icmp_ln52_fu_1014_p2;
    sc_signal< sc_lv<1> > icmp_ln52_1_fu_1020_p2;
    sc_signal< sc_lv<2> > trunc_ln68_fu_1044_p1;
    sc_signal< sc_lv<2> > add_ln68_2_fu_1058_p2;
    sc_signal< sc_lv<1> > abscond_fu_1074_p2;
    sc_signal< sc_lv<32> > neg_fu_1068_p2;
    sc_signal< sc_lv<1> > abscond199_fu_1094_p2;
    sc_signal< sc_lv<32> > neg198_fu_1088_p2;
    sc_signal< sc_lv<32> > abs_fu_1080_p3;
    sc_signal< sc_lv<32> > abs200_fu_1100_p3;
    sc_signal< sc_lv<10> > tmp_2_fu_1114_p4;
    sc_signal< sc_lv<32> > result_fu_1108_p2;
    sc_signal< sc_lv<24> > tmp_4_fu_1130_p4;
    sc_signal< sc_lv<1> > icmp_ln80_fu_1124_p2;
    sc_signal< sc_lv<1> > xor_ln80_fu_1150_p2;
    sc_signal< sc_lv<1> > icmp_ln82_fu_1140_p2;
    sc_signal< sc_lv<1> > or_ln80_fu_1164_p2;
    sc_signal< sc_lv<8> > select_ln80_fu_1156_p3;
    sc_signal< sc_lv<8> > empty_12_fu_1146_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_1199_p3;
    sc_signal< sc_lv<5> > zext_ln69_fu_1195_p1;
    sc_signal< sc_lv<5> > sub_ln69_fu_1207_p2;
    sc_signal< sc_lv<5> > add_ln69_fu_1213_p2;
    sc_signal< sc_lv<2> > trunc_ln68_1_fu_1185_p1;
    sc_signal< sc_lv<2> > add_ln493_fu_1224_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_1234_p3;
    sc_signal< sc_lv<4> > zext_ln68_fu_1230_p1;
    sc_signal< sc_lv<4> > sub_ln68_fu_1242_p2;
    sc_signal< sc_lv<4> > tmp_1_fu_1253_p10;
    sc_signal< sc_lv<8> > grp_fu_1374_p1;
    sc_signal< sc_lv<12> > zext_ln69_1_fu_1268_p1;
    sc_signal< sc_lv<8> > grp_fu_1382_p1;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<21> ap_const_lv21_1FFFFF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<21> ap_const_lv21_20000;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<21> ap_const_lv21_400;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_3;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<21> ap_const_lv21_800;
    static const sc_lv<21> ap_const_lv21_802;
    static const sc_lv<21> ap_const_lv21_801;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<11> ap_const_lv11_401;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Gx_address0();
    void thread_Gx_ce0();
    void thread_Gy_address0();
    void thread_Gy_ce0();
    void thread_INPUT_IMAGE_TDATA_blk_n();
    void thread_INPUT_IMAGE_TREADY();
    void thread_INPUT_IMAGE_V_data_V_0_ack_in();
    void thread_INPUT_IMAGE_V_data_V_0_ack_out();
    void thread_INPUT_IMAGE_V_data_V_0_data_out();
    void thread_INPUT_IMAGE_V_data_V_0_load_A();
    void thread_INPUT_IMAGE_V_data_V_0_load_B();
    void thread_INPUT_IMAGE_V_data_V_0_sel();
    void thread_INPUT_IMAGE_V_data_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_data_V_0_vld_in();
    void thread_INPUT_IMAGE_V_data_V_0_vld_out();
    void thread_INPUT_IMAGE_V_dest_V_0_ack_in();
    void thread_INPUT_IMAGE_V_dest_V_0_ack_out();
    void thread_INPUT_IMAGE_V_dest_V_0_data_out();
    void thread_INPUT_IMAGE_V_dest_V_0_load_A();
    void thread_INPUT_IMAGE_V_dest_V_0_load_B();
    void thread_INPUT_IMAGE_V_dest_V_0_sel();
    void thread_INPUT_IMAGE_V_dest_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_dest_V_0_vld_in();
    void thread_INPUT_IMAGE_V_dest_V_0_vld_out();
    void thread_INPUT_IMAGE_V_id_V_0_ack_in();
    void thread_INPUT_IMAGE_V_id_V_0_ack_out();
    void thread_INPUT_IMAGE_V_id_V_0_data_out();
    void thread_INPUT_IMAGE_V_id_V_0_load_A();
    void thread_INPUT_IMAGE_V_id_V_0_load_B();
    void thread_INPUT_IMAGE_V_id_V_0_sel();
    void thread_INPUT_IMAGE_V_id_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_id_V_0_vld_in();
    void thread_INPUT_IMAGE_V_id_V_0_vld_out();
    void thread_INPUT_IMAGE_V_keep_V_0_ack_in();
    void thread_INPUT_IMAGE_V_keep_V_0_ack_out();
    void thread_INPUT_IMAGE_V_keep_V_0_data_out();
    void thread_INPUT_IMAGE_V_keep_V_0_load_A();
    void thread_INPUT_IMAGE_V_keep_V_0_load_B();
    void thread_INPUT_IMAGE_V_keep_V_0_sel();
    void thread_INPUT_IMAGE_V_keep_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_keep_V_0_vld_in();
    void thread_INPUT_IMAGE_V_keep_V_0_vld_out();
    void thread_INPUT_IMAGE_V_strb_V_0_ack_in();
    void thread_INPUT_IMAGE_V_strb_V_0_ack_out();
    void thread_INPUT_IMAGE_V_strb_V_0_data_out();
    void thread_INPUT_IMAGE_V_strb_V_0_load_A();
    void thread_INPUT_IMAGE_V_strb_V_0_load_B();
    void thread_INPUT_IMAGE_V_strb_V_0_sel();
    void thread_INPUT_IMAGE_V_strb_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_strb_V_0_vld_in();
    void thread_INPUT_IMAGE_V_strb_V_0_vld_out();
    void thread_INPUT_IMAGE_V_user_V_0_ack_in();
    void thread_INPUT_IMAGE_V_user_V_0_ack_out();
    void thread_INPUT_IMAGE_V_user_V_0_data_out();
    void thread_INPUT_IMAGE_V_user_V_0_load_A();
    void thread_INPUT_IMAGE_V_user_V_0_load_B();
    void thread_INPUT_IMAGE_V_user_V_0_sel();
    void thread_INPUT_IMAGE_V_user_V_0_state_cmp_full();
    void thread_INPUT_IMAGE_V_user_V_0_vld_in();
    void thread_INPUT_IMAGE_V_user_V_0_vld_out();
    void thread_OUTPUT_IMAGE_TDATA();
    void thread_OUTPUT_IMAGE_TDATA_blk_n();
    void thread_OUTPUT_IMAGE_TDEST();
    void thread_OUTPUT_IMAGE_TID();
    void thread_OUTPUT_IMAGE_TKEEP();
    void thread_OUTPUT_IMAGE_TLAST();
    void thread_OUTPUT_IMAGE_TSTRB();
    void thread_OUTPUT_IMAGE_TUSER();
    void thread_OUTPUT_IMAGE_TVALID();
    void thread_OUTPUT_IMAGE_V_data_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_data_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_data_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_data_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_data_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_data_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_data_V_1_sel();
    void thread_OUTPUT_IMAGE_V_data_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_data_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_data_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_dest_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_dest_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_dest_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_dest_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_dest_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_dest_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_dest_V_1_sel();
    void thread_OUTPUT_IMAGE_V_dest_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_dest_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_dest_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_id_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_id_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_id_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_id_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_id_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_id_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_id_V_1_sel();
    void thread_OUTPUT_IMAGE_V_id_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_id_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_id_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_keep_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_keep_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_keep_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_keep_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_keep_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_keep_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_keep_V_1_sel();
    void thread_OUTPUT_IMAGE_V_keep_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_keep_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_keep_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_last_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_last_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_last_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_last_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_last_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_last_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_last_V_1_sel();
    void thread_OUTPUT_IMAGE_V_last_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_last_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_last_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_strb_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_strb_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_strb_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_strb_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_strb_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_strb_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_strb_V_1_sel();
    void thread_OUTPUT_IMAGE_V_strb_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_strb_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_strb_V_1_vld_out();
    void thread_OUTPUT_IMAGE_V_user_V_1_ack_in();
    void thread_OUTPUT_IMAGE_V_user_V_1_ack_out();
    void thread_OUTPUT_IMAGE_V_user_V_1_data_in();
    void thread_OUTPUT_IMAGE_V_user_V_1_data_out();
    void thread_OUTPUT_IMAGE_V_user_V_1_load_A();
    void thread_OUTPUT_IMAGE_V_user_V_1_load_B();
    void thread_OUTPUT_IMAGE_V_user_V_1_sel();
    void thread_OUTPUT_IMAGE_V_user_V_1_state_cmp_full();
    void thread_OUTPUT_IMAGE_V_user_V_1_vld_in();
    void thread_OUTPUT_IMAGE_V_user_V_1_vld_out();
    void thread_abs200_fu_1100_p3();
    void thread_abs_fu_1080_p3();
    void thread_abscond199_fu_1094_p2();
    void thread_abscond_fu_1074_p2();
    void thread_add_ln34_1_fu_596_p2();
    void thread_add_ln34_fu_507_p2();
    void thread_add_ln493_fu_1224_p2();
    void thread_add_ln68_2_fu_1058_p2();
    void thread_add_ln69_fu_1213_p2();
    void thread_and_ln41_1_fu_564_p2();
    void thread_and_ln41_fu_559_p2();
    void thread_and_ln52_fu_1026_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state11();
    void thread_ap_block_state11_io();
    void thread_ap_block_state5_io();
    void thread_ap_block_state6_io();
    void thread_ap_block_state9_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op236_write_state9();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_colOffset_fu_1048_p2();
    void thread_counter_fu_483_p2();
    void thread_empty_12_fu_1146_p1();
    void thread_grp_fu_1374_p1();
    void thread_grp_fu_1382_p1();
    void thread_i_2_fu_477_p2();
    void thread_i_fu_1341_p2();
    void thread_icmp_ln101_fu_1335_p2();
    void thread_icmp_ln274_1_fu_728_p2();
    void thread_icmp_ln274_2_fu_523_p2();
    void thread_icmp_ln274_3_fu_529_p2();
    void thread_icmp_ln274_fu_714_p2();
    void thread_icmp_ln29_fu_471_p2();
    void thread_icmp_ln30_fu_495_p2();
    void thread_icmp_ln31_fu_535_p2();
    void thread_icmp_ln41_1_fu_513_p2();
    void thread_icmp_ln41_2_fu_553_p2();
    void thread_icmp_ln41_fu_489_p2();
    void thread_icmp_ln43_fu_636_p2();
    void thread_icmp_ln52_1_fu_1020_p2();
    void thread_icmp_ln52_fu_1014_p2();
    void thread_icmp_ln61_fu_1032_p2();
    void thread_icmp_ln66_fu_1038_p2();
    void thread_icmp_ln67_fu_1179_p2();
    void thread_icmp_ln80_fu_1124_p2();
    void thread_icmp_ln82_fu_1140_p2();
    void thread_j_fu_541_p2();
    void thread_k_fu_501_p2();
    void thread_neg198_fu_1088_p2();
    void thread_neg_fu_1068_p2();
    void thread_or_ln80_fu_1164_p2();
    void thread_pixelbuffer_val_1_address0();
    void thread_pixelbuffer_val_1_ce0();
    void thread_pixelbuffer_val_1_we0();
    void thread_pixelbuffer_val_2_address0();
    void thread_pixelbuffer_val_2_ce0();
    void thread_pixelbuffer_val_2_we0();
    void thread_result_fu_1108_p2();
    void thread_rowOffset_fu_1189_p2();
    void thread_select_ln41_2_fu_972_p3();
    void thread_select_ln41_3_fu_979_p3();
    void thread_select_ln41_5_fu_993_p3();
    void thread_select_ln41_6_fu_1000_p3();
    void thread_select_ln41_fu_958_p3();
    void thread_select_ln80_fu_1156_p3();
    void thread_sext_ln69_fu_1218_p1();
    void thread_shl_ln_fu_1234_p3();
    void thread_sub_ln68_fu_1242_p2();
    void thread_sub_ln69_fu_1207_p2();
    void thread_tmp_1_fu_1253_p10();
    void thread_tmp_2_fu_1114_p4();
    void thread_tmp_3_fu_1199_p3();
    void thread_tmp_4_fu_1130_p4();
    void thread_tmp_data_V_fu_1170_p3();
    void thread_tmp_last_V_fu_1367_p2();
    void thread_trunc_ln274_1_fu_632_p1();
    void thread_trunc_ln274_fu_519_p1();
    void thread_trunc_ln68_1_fu_1185_p1();
    void thread_trunc_ln68_fu_1044_p1();
    void thread_window_val_0_0_fu_698_p3();
    void thread_window_val_0_1_2_fu_766_p3();
    void thread_window_val_0_1_3_fu_774_p3();
    void thread_window_val_0_1_4_fu_930_p3();
    void thread_window_val_0_2_1_fu_690_p3();
    void thread_window_val_1_0_1_fu_674_p3();
    void thread_window_val_1_1_2_fu_806_p3();
    void thread_window_val_1_1_3_fu_814_p3();
    void thread_window_val_1_1_4_fu_888_p3();
    void thread_window_val_1_1_5_fu_895_p3();
    void thread_window_val_1_2_1_fu_666_p3();
    void thread_window_val_2_0_1_fu_650_p3();
    void thread_window_val_2_1_1_fu_642_p3();
    void thread_window_val_2_1_3_fu_720_p3();
    void thread_window_val_2_1_4_fu_734_p3();
    void thread_window_val_2_1_5_fu_846_p3();
    void thread_window_val_2_1_6_fu_853_p3();
    void thread_window_val_2_1_7_fu_951_p3();
    void thread_window_val_2_2_13_fu_658_p3();
    void thread_window_val_2_2_17_fu_682_p3();
    void thread_window_val_2_2_27_fu_706_p3();
    void thread_window_val_2_2_33_fu_750_p3();
    void thread_window_val_2_2_34_fu_758_p3();
    void thread_window_val_2_2_35_fu_782_p3();
    void thread_window_val_2_2_36_fu_790_p3();
    void thread_window_val_2_2_37_fu_798_p3();
    void thread_window_val_2_2_38_fu_822_p3();
    void thread_window_val_2_2_39_fu_830_p3();
    void thread_window_val_2_2_40_fu_838_p3();
    void thread_window_val_2_2_41_fu_860_p3();
    void thread_window_val_2_2_42_fu_867_p3();
    void thread_window_val_2_2_43_fu_874_p3();
    void thread_window_val_2_2_44_fu_881_p3();
    void thread_window_val_2_2_45_fu_902_p3();
    void thread_window_val_2_2_46_fu_909_p3();
    void thread_window_val_2_2_47_fu_916_p3();
    void thread_window_val_2_2_48_fu_923_p3();
    void thread_window_val_2_2_49_fu_937_p3();
    void thread_window_val_2_2_50_fu_944_p3();
    void thread_window_val_2_2_51_fu_965_p3();
    void thread_window_val_2_2_52_fu_986_p3();
    void thread_window_val_2_2_53_fu_1007_p3();
    void thread_window_val_2_2_fu_742_p3();
    void thread_xor_ln80_fu_1150_p2();
    void thread_zext_ln68_1_fu_1064_p1();
    void thread_zext_ln68_2_fu_1054_p1();
    void thread_zext_ln68_fu_1230_p1();
    void thread_zext_ln69_1_fu_1268_p1();
    void thread_zext_ln69_fu_1195_p1();
    void thread_zext_ln729_fu_547_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
